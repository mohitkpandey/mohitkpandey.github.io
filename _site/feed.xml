<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.0">Jekyll</generator><link href="https://mohitkpandey.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://mohitkpandey.github.io/" rel="alternate" type="text/html" /><updated>2020-11-10T16:05:17-06:00</updated><id>https://mohitkpandey.github.io/feed.xml</id><title type="html">Mohit Pandey</title><subtitle>Ph.D. Candidate</subtitle><author><name>Mohit Pandey</name><email>pandey.mohitk@gmail.com</email></author><entry><title type="html">Named entity recognition with simple Attention</title><link href="https://mohitkpandey.github.io/posts/2020/11/TFJS-NER/" rel="alternate" type="text/html" title="Named entity recognition with simple Attention" /><published>2020-11-10T00:00:00-06:00</published><updated>2020-11-10T00:00:00-06:00</updated><id>https://mohitkpandey.github.io/posts/2020/11/TFJS-NER</id><content type="html" xml:base="https://mohitkpandey.github.io/posts/2020/11/TFJS-NER/">&lt;p&gt;NER implementation hosted within browser using Tensorflow-JS.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Named-entity_recognition&quot;&gt;Named-entity recognition&lt;/a&gt; is a subtask of information extraction that seeks to locate and classify named entities mentioned in unstructured text into pre-defined categories such as person names, organizations, locations, etc.
See &lt;a href=&quot;/posts/2020/11/TFJS-NER/#demo&quot;&gt;&lt;b&gt;&lt;em&gt;demo&lt;/em&gt;&lt;/b&gt;&lt;/a&gt; below. Continue reading for model explanation and code.&lt;/p&gt;

&lt;!--more--&gt;
&lt;h4 id=&quot;demo&quot;&gt;Demo&lt;/h4&gt;

&lt;head&gt;
      &lt;meta name=&quot;description&quot; content=&quot;Testing Simple Machine Learning Model into an WebApp using TensorFlow.js&quot; /&gt;
      &lt;meta name=&quot;keywords&quot; content=&quot;Machine Learning, TensorFlow.js&quot; /&gt;
      &lt;meta name=&quot;author&quot; content=&quot;Mohit Pandey&quot; /&gt;
      &lt;meta charset=&quot;UTF-8&quot; /&gt;
      &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot; /&gt;
      &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot; /&gt;
      &lt;meta name=&quot;description&quot; content=&quot;TensorFlow js demo for Named-entity recognition (NER) (Sequence Tagging task). Implemented with Keras (GloVe + GRU RNN) and tensorflow.js&quot; /&gt;
      &lt;meta property=&quot;og:title&quot; content=&quot;Named-entity recognition TensorFlow.js demo&quot; /&gt;
      &lt;meta property=&quot;og:description&quot; content=&quot;TensorFlow js demo for Named-entity recognition (NER) (Sequence Tagging task). Implemented with Keras (GloVe + GRU RNN) and tensorflow.js&quot; /&gt;
      &lt;link rel=&quot;stylesheet&quot; href=&quot;https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css&quot; integrity=&quot;sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T&quot; crossorigin=&quot;anonymous&quot; /&gt;
      &lt;style&gt;
         .demo {
         margin: 2em auto;
         }
         .main-result {
         margin: 3em auto;
         }
         .result {
         padding: 1em;
         }
         .demo-header {
         font-size: 1.0rem;
         margin: 0.5em;
         }
         .tags-review {
         margin-top: 1.5rem;
         }
         .divider{
          width:5px;
          height:auto;
          display:inline-block;
          }
         .btn-primary { background-color: red; }

      &lt;/style&gt;
      
   &lt;/head&gt;
&lt;body&gt;
      &lt;!--  &lt;script src=&quot;https://code.jquery.com/jquery-2.2.4.min.js&quot;&gt;&lt;/script&gt;
         &lt;script src=&quot;https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@1.5.2/dist/tf.min.js&quot;&gt;&lt;/script&gt; --&gt;
      &lt;main role=&quot;main&quot; class=&quot;container&quot;&gt;
         &lt;p&gt;
            Enter sentence like &lt;code&gt;Fischler proposed EU-wide measures after reports from Britain and France that under laboratory conditions sheep could contract bovine spongiform encephalopathy.&lt;/code&gt;
            or &lt;code&gt;She likes David!&lt;/code&gt;.
         &lt;/p&gt;
         &lt;div class=&quot;card demo&quot;&gt;
            &lt;div class=&quot;card-header&quot;&gt;
               &lt;!-- &lt;h1 class=&quot;demo-header&quot;&gt;
                  Dehcmcmo! --&gt;
                  &lt;!-- &lt;div class=&quot;loading-model spinner-border text-primary&quot; role=&quot;status&quot;&gt;
                     &lt;span class=&quot;sr-only&quot;&gt;Loading...&lt;/span&gt;
                  &lt;/div&gt; --&gt;
               &lt;!-- &lt;/h1&gt; --&gt;
               &lt;form class=&quot;form&quot; onkeypress=&quot;return event.keyCode != 13;&quot;&gt;
                  &lt;div class=&quot;form-group mx-sm-3 md-2&quot;&gt;
                     &lt;input type=&quot;text&quot; class=&quot;form-control form-control-xs&quot; id=&quot;input_text&quot; placeholder=&quot;Enter short sentence&quot; /&gt;
                  &lt;/div&gt;
                  &lt;div class=&quot;d-flex justify-content-center&quot;&gt;
                     &lt;button type=&quot;button&quot; class=&quot;btn btn-primary&quot; id=&quot;get_ner_button&quot;&gt;Search Entities&lt;/button&gt;
                     &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;
                     &lt;button type=&quot;button&quot; class=&quot;btn btn-primary&quot; id=&quot;clear_bttn&quot;&gt;Clear&lt;/button&gt;
                  &lt;/div&gt;
               &lt;/form&gt;
            &lt;/div&gt;
            &lt;div class=&quot;result main-result&quot;&gt;&lt;/div&gt;
            &lt;div class=&quot;result attention-bar&quot; id=&quot;attention_bar&quot;&gt;&lt;/div&gt;
            &lt;div class=&quot;result tags-result&quot;&gt;&lt;/div&gt;
         &lt;/div&gt;
      &lt;/main&gt;
      &lt;script src=&quot;https://code.jquery.com/jquery-3.3.1.slim.min.js&quot; integrity=&quot;sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;
      &lt;script src=&quot;https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js&quot; integrity=&quot;sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;
      &lt;script src=&quot;https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js&quot; integrity=&quot;sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM&quot; crossorigin=&quot;anonymous&quot;&gt;&lt;/script&gt;
      &lt;script src=&quot;https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@1.0.0/dist/tf.min.js&quot;&gt;&lt;/script&gt;
      &lt;script src=&quot;https://cdn.plot.ly/plotly-latest.min.js&quot;&gt;&lt;/script&gt;
      &lt;script src=&quot;../../../../files/model/tfjs-ner/vocabs.js&quot;&gt;&lt;/script&gt;
      &lt;script src=&quot;../../../../files/model/tfjs-ner/predict.js&quot;&gt;&lt;/script&gt;
      
   &lt;/body&gt;

&lt;h4 id=&quot;further-reading&quot;&gt;Further readingâ€¦.&lt;/h4&gt;
&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Cras tincidunt lobortis feugiat vivamus at augue eget arcu. Diam sollicitudin tempor id eu nisl nunc mi. Pulvinar proin gravida hendrerit lectus. Volutpat est velit egestas dui id ornare arcu. Nec feugiat in fermentum posuere urna nec tincidunt. Accumsan tortor posuere ac ut. Nam at lectus urna duis convallis convallis tellus. Metus aliquam eleifend mi in nulla. Facilisis gravida neque convallis a cras semper auctor neque. Aliquet sagittis id consectetur purus ut faucibus pulvinar elementum. Pellentesque massa placerat duis ultricies lacus sed turpis tincidunt id. Est lorem ipsum dolor sit amet consectetur adipiscing elit.&lt;/p&gt;
&lt;h4 id=&quot;code&quot;&gt;Code&lt;/h4&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;tensorflow.keras.callbacks&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ModelCheckpoint&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;checkpoint&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ModelCheckpoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'./trained_models/model.h5'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;monitor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'loss'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;verbose&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;save_best_only&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'min'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;callbacks_list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;checkpoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;train_X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;train_y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;epochs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;batch_size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;validation_data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;valid_X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;valid_y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;callbacks&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;callbacks_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Mohit Pandey</name><email>pandey.mohitk@gmail.com</email></author><category term="Tensorflow-JS" /><category term="NLP" /><category term="RNN" /><category term="Text Classification" /><category term="Keras" /><summary type="html">NER implementation hosted within browser using Tensorflow-JS. Named-entity recognition is a subtask of information extraction that seeks to locate and classify named entities mentioned in unstructured text into pre-defined categories such as person names, organizations, locations, etc. See demo below. Continue reading for model explanation and code.</summary></entry><entry><title type="html">Seq2Seq Machine Translation</title><link href="https://mohitkpandey.github.io/posts/2020/11/seq2seq/" rel="alternate" type="text/html" title="Seq2Seq Machine Translation" /><published>2020-11-08T00:00:00-06:00</published><updated>2020-11-08T00:00:00-06:00</updated><id>https://mohitkpandey.github.io/posts/2020/11/Seq2seq</id><content type="html" xml:base="https://mohitkpandey.github.io/posts/2020/11/seq2seq/">&lt;p&gt;I explore Seq2Seq model in Pytorch to build a neural machine translation system. &lt;span style=&quot;color:red&quot;&gt;&lt;strong&gt;Currently the system translates from German to English.&lt;/strong&gt;&lt;/span&gt; 
In this series, I will explore 
various state-of-the-art NLP architectures to build NMT systems algorithms and hope to focus on English to Hindi translation. 
I will also attempt to provide simplified mathematical explanations of the models as well as implementation details. 
&lt;!--more--&gt;&lt;/p&gt;

&lt;p&gt;First on this list is Sequence-to-Sequence model using encoder-decoder paradigm. Check the &lt;b&gt;DEMO&lt;/b&gt; below.&lt;/p&gt;

&lt;html&gt;
&lt;head&gt;
  
&lt;script&gt;
  function sendData()
  {
      let request = new XMLHttpRequest();
      url = &quot;http://127.0.0.1:8008/predict/&quot;+document.getElementById('src').value
      request.open(&quot;GET&quot;, url);
      request.send();
      request.onload = () =&gt; {
        console.log(request);
        if (request.status === 200) {
          // by default the response comes in the string format, we need to parse the data into JSON
          document.getElementById('trg').value= request.response;//JSON.parse(request.responseText));
        } else {
          console.log(`error ${request.status} ${request.statusText}`);
        }
      };

  }

&lt;/script&gt;

&lt;/head&gt;
&lt;body&gt;
&lt;h2&gt;Please enter short German sentence&lt;/h2&gt;
Seperate punctuations with a space &lt;i&gt;( zwei junge weiÃŸe mÃ¤nner sind im freien in der nÃ¤he vieler bÃ¼sche . )&lt;/i&gt;
&lt;form&gt;
    &lt;label for=&quot;sep_len&quot;&gt;Source Sentence&lt;/label&gt; &lt;input id=&quot;src&quot; name=&quot;sep_len&quot; type=&quot;text&quot; value=&quot;&quot; /&gt;
    &lt;br /&gt;
    &lt;label for=&quot;sep_len&quot;&gt;Target Sentence&lt;/label&gt; &lt;input id=&quot;trg&quot; name=&quot;sep_len&quot; type=&quot;text&quot; value=&quot;&quot; /&gt;
    &lt;br /&gt;
    &lt;input type=&quot;button&quot; onclick=&quot;sendData()&quot; value=&quot;Translate&quot; /&gt;

&lt;/form&gt;

&lt;/body&gt;
&lt;/html&gt;

&lt;!-- Much has been written lately about the increasing militarization of US
law enforcement. One of the most visible indicators of this shift in
recent decades is the increased frequency of tactical gear and equipment
worn and carried by police officers. However, this pales in comparison
to images of police departments bringing armored vehicles to peaceful
protests.  People often criticize police departments or SWAT
teams for owning and deploying tanks in situations that donâ€™t warrant
their use. In reality, these â€˜tanksâ€™ are typically [Mine-Resistant
Ambush Protected](https://en.wikipedia.org/wiki/MRAP) (MRAP) vehicles.
MRAPs were developed by the US military and produced by various
manufacturers from 2007-2009. As their name suggests, they are designed
to protect passengers from an improvised explosive device (IED) attack.

Given the extreme threat they were designed to survive, MRAPs are
emblematic of increasing police militarization in the US. But how did
police come to own these military-grade vehicles?

# Where have all the MRAPs gone?

Police departments, sheriffâ€™s offices, and even school districts (the LA
Unified School District [briefly owned an
MRAP](https://www.lamag.com/citythinkblog/lausd-keys-mrap-tank/) in 2014
before [returning it to the Department of
Defense](https://www.dailynews.com/2014/11/21/lausd-school-police-return-armored-military-vehicle-which-is-now-in-barstow/))

 --&gt;</content><author><name>Mohit Pandey</name><email>pandey.mohitk@gmail.com</email></author><category term="pytorch" /><category term="machine translation" /><category term="heroku" /><category term="seq2seq" /><summary type="html">I explore Seq2Seq model in Pytorch to build a neural machine translation system. Currently the system translates from German to English. In this series, I will explore various state-of-the-art NLP architectures to build NMT systems algorithms and hope to focus on English to Hindi translation. I will also attempt to provide simplified mathematical explanations of the models as well as implementation details.</summary></entry><entry><title type="html">Digit Classification</title><link href="https://mohitkpandey.github.io/posts/2020/11/digit-class/" rel="alternate" type="text/html" title="Digit Classification" /><published>2020-11-01T00:00:00-05:00</published><updated>2020-11-01T00:00:00-05:00</updated><id>https://mohitkpandey.github.io/posts/2020/11/Digit-Classification</id><content type="html" xml:base="https://mohitkpandey.github.io/posts/2020/11/digit-class/">&lt;p&gt;&lt;b&gt;Digit Recognition using Deep Learning&lt;/b&gt;
&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;
This page is best viewed &lt;a href=&quot;https://mohitpandey.netlify.app/posts/2020/11/digit-class/&quot;&gt;here&lt;/a&gt;

&lt;/p&gt;
&lt;p&gt;Webapp to recognize handwritten digits between 0 and 9. Model trained 
using Keras and served using Tensorflow.js
&lt;!--more--&gt;&lt;/p&gt;

&lt;html&gt;
   &lt;head&gt;
      &lt;!-- Global site tag (gtag.js) - Google Analytics --&gt;
      &lt;!-- &lt;script  src=&quot;https://www.googletagmanager.com/gtag/js?id=G-H0NW5Z2MYC&quot;&gt;&lt;/script&gt; --&gt;
      &lt;!-- &lt;script&gt;
         window.dataLayer = window.dataLayer || [];
         function gtag(){dataLayer.push(arguments);}
         gtag('js', new Date());
         
         gtag('config', 'G-H0NW5Z2MYC');
      &lt;/script&gt; --&gt;
      &lt;title&gt;Digit Recognition WebApp&lt;/title&gt;
      &lt;meta name=&quot;description&quot; content=&quot;Testing Simple Machine Learning Model into an WebApp using TensorFlow.js&quot; /&gt;
      &lt;meta name=&quot;keywords&quot; content=&quot;Machine Learning, TensorFlow.js&quot; /&gt;
      &lt;meta name=&quot;author&quot; content=&quot;Mohit Pandey&quot; /&gt;
      &lt;style&gt;
         body {
         touch-action: none; /*https://developer.mozilla.org/en-US/docs/Web/CSS/touch-action*/
         font-family: &quot;Roboto&quot;;
         }
         h1 {
         margin: 50px;
         font-size: 70px;
         text-align: center;
         }
         #paint {
         border:3px solid red;
         margin: auto;
         }
         #predicted { 
         font-size: 18px;
         margin-top: 5px;
         text-align: center;
         }
         #number {
         border: 3px solid black;
         margin: auto;
         margin-top: 5px;
         text-align: center;
         vertical-align: middle;
         }
         #clear {
         margin: auto;
         margin-top: 5px;
         padding: 5px;
         text-align: center;
         }
      &lt;/style&gt;
   &lt;/head&gt;
   &lt;body&gt;
      &lt;!--&lt;script type=&quot;text/javascript&quot; src=&quot;http://livejs.com/live.js&quot;&gt;&lt;/script&gt;--&gt;
      &lt;script src=&quot;https://code.jquery.com/jquery-2.2.4.min.js&quot;&gt;&lt;/script&gt;
      &lt;script src=&quot;https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@1.5.2/dist/tf.min.js&quot;&gt;&lt;/script&gt;
      &lt;!--     &lt;h1&gt;Digit Recognition WebApp&lt;/h1&gt; --&gt;
      &lt;div id=&quot;paint&quot;&gt;
         &lt;canvas id=&quot;myCanvas&quot;&gt;&lt;/canvas&gt;
      &lt;/div&gt;
      &lt;div id=&quot;predicted&quot;&gt;
         Recognized digit
         &lt;div id=&quot;number&quot;&gt;&lt;/div&gt;
         &lt;button id=&quot;clear&quot;&gt;Clear&lt;/button&gt;
      &lt;/div&gt;
      &lt;script&gt;
         var isMobile = /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);
         if (isMobile) {
           $('#paint').css({'width': '100%'});
           $('#number').css({'width': '30%', 'font-size': '50px'});
           $('#clear').css({'font-size': '18px'});
         } else {
           $('#paint').css({'width': '300px'});
           $('#number').css({'width': '150px', 'font-size': '120px'});
           $('#clear').css({'font-size': '18px'});
         }
         
         var cw = $('#paint').width();
         $('#paint').css({'height': cw + 'px'});
         
         cw = $('#number').width();
         $('#number').css({'height': cw + 'px'});
         
         // From https://www.html5canvastutorials.com/labs/html5-canvas-paint-application/
         var canvas = document.getElementById('myCanvas');
         var context = canvas.getContext('2d');
         
         var compuetedStyle = getComputedStyle(document.getElementById('paint'));
         canvas.width = parseInt(compuetedStyle.getPropertyValue('width'));
         canvas.height = parseInt(compuetedStyle.getPropertyValue('height'));
         
         var mouse = {x: 0, y: 0};
         
         canvas.addEventListener('mousemove', function(e) {
           mouse.x = e.pageX - this.offsetLeft;
           mouse.y = e.pageY - this.offsetTop;
         }, false);
         
         context.lineWidth = isMobile ? 20 : 25;
         context.lineJoin = 'round';
         context.lineCap = 'round';
         context.strokeStyle = '#0000FF';
         
         canvas.addEventListener('mousedown', function(e) {
           context.moveTo(mouse.x, mouse.y);
           context.beginPath();
           canvas.addEventListener('mousemove', onPaint, false);
         }, false);
         
         canvas.addEventListener('mouseup', function() {
           // $('#number').html('&lt;img id=&quot;spinner&quot; src=&quot;spinner.gif&quot;/&gt;');
           canvas.removeEventListener('mousemove', onPaint, false);
           var img = new Image();
           img.onload = function() {
             context.drawImage(img, 0, 0, 28, 28);
             data = context.getImageData(0, 0, 28, 28).data;
             var input = [];
             for(var i = 0; i &lt; data.length; i += 4) {
               input.push(data[i + 2] / 255);
             }
             predict(input);
           };
           img.src = canvas.toDataURL('image/png');
         }, false);
         
         var onPaint = function() {
           context.lineTo(mouse.x, mouse.y);
           context.stroke();
         };
         
         tf.loadLayersModel('../../../../files/model/digit-class/model.json').then(function(model) {
           window.model = model;
         });
         
         // http://bencentra.com/code/2014/12/05/html5-canvas-touch-events.html
         // Set up touch events for mobile, etc
         canvas.addEventListener('touchstart', function (e) {
           var touch = e.touches[0];
           canvas.dispatchEvent(new MouseEvent('mousedown', {
             clientX: touch.clientX,
             clientY: touch.clientY
           }));
         }, false);
         canvas.addEventListener('touchend', function (e) {
           canvas.dispatchEvent(new MouseEvent('mouseup', {}));
         }, false);
         canvas.addEventListener('touchmove', function (e) {
           var touch = e.touches[0];
           canvas.dispatchEvent(new MouseEvent('mousemove', {
             clientX: touch.clientX,
             clientY: touch.clientY
           }));
         }, false);
         
         var predict = function(input) {
           if (window.model) {
             window.model.predict([tf.tensor(input).reshape([1, 28, 28, 1])]).array().then(function(scores){
               scores = scores[0];
               predicted = scores.indexOf(Math.max(...scores));
               $('#number').html(predicted);
             });
           } else {
             // The model takes a bit to load, if we are too fast, wait
             setTimeout(function(){predict(input)}, 50);
           }
         }
         
         $('#clear').click(function(){
           context.clearRect(0, 0, canvas.width, canvas.height);
           $('#number').html('');
         });
      &lt;/script&gt;
   &lt;/body&gt;
&lt;/html&gt;</content><author><name>Mohit Pandey</name><email>pandey.mohitk@gmail.com</email></author><category term="Image Classification" /><category term="MNIST" /><summary type="html">Digit Recognition using Deep Learning This page is best viewed here Webapp to recognize handwritten digits between 0 and 9. Model trained using Keras and served using Tensorflow.js</summary></entry></feed>